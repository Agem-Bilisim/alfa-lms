#
# Application server
#
spring.application.name=@project.name@
spring.main.banner-mode=off
spring.profiles.active=development
server.context-path=/alfalms
server.port = 8081


#
# Security
#
security.basic.realm=${spring.application.name}

#
# Session
#
spring.session.store-type=hash-map

#
# MariaDB
#
# CREATE DATABASE alfa DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;
# Use 'create-drop' to re-create tables and insert initial records.
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://db.agem.com.tr:3306/alfalms?useSSL=false
spring.datasource.username=root
spring.datasource.password=1
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.sql-script-encoding=UTF-8
spring.datasource.hikari.connection-timeout=60000
spring.datasource.hikari.maximum-pool-size=5

#
# Logging
#
# These values are overridden if there is a logback.xml in the classpath.
logging.level.org.springframework.security=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.springframework=ERROR
logging.level.tr.com.agem=INFO
logging.file=${java.io.tmpdir}/alfa.log
logging.pattern.console=%d{dd-MM-yyyy HH:mm:ss} %highlight(%-5level) - %msg%n
logging.pattern.file="%d{dd-MM-yyyy HH:mm:ss} [%thread] %highlight(%-5level) %logger{36} - %msg%n"
spring.output.ansi.enabled=never
# Workaround for SSE-related timeout logs
spring.mvc.async.request-timeout = -1
# Log incoming requests
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG

#
# Thymeleaf
#
spring.thymeleaf.check-template-location=true
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.cache=true
spring.thymeleaf.content-type=text/html

#
# Jackson
#
spring.jackson.date-format=dd-MM-yyyy HH:mm:ss

#
# Alfa
#
sys.name=@project.name@
sys.description=@project.description@
sys.version=@project.version@
sys.locale=tr